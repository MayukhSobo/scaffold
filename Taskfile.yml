version: "3"

# Include all task files from the tasks directory
includes:
  shared: ./tasks/shared.yml
  build: ./tasks/build.yml
  dev: ./tasks/dev.yml
  test: ./tasks/test.yml
  quality: ./tasks/quality.yml
  deps: ./tasks/deps.yml
  clean: ./tasks/clean.yml
  docker: ./tasks/docker.yml
  codeql: ./tasks/codeql.yml
  ci: ./tasks/ci.yml
  config: ./tasks/config.yml
  help: ./tasks/help.yml
  db: ./tasks/db.yml

vars:
  APP_NAME: Scaffold
  DOCKER_IMAGE_NAME: scaffold  # Lowercase version for Docker
  BUILD_DIR: build
  CMD_DIR: cmd/server
  CONFIG_DIR: configs

  # Binary naming configuration
  BINARY_BASE_NAME: scaffold
  BINARY_NAME: "{{.BINARY_BASE_NAME}}"

  # Release binary naming: [BINARY_BASE_NAME]-[ARCH]-[PLATFORM]
  BINARY_LINUX: "{{.BINARY_BASE_NAME}}-amd64-linux"
  BINARY_DARWIN: "{{.BINARY_BASE_NAME}}-amd64-darwin"
  BINARY_WINDOWS: "{{.BINARY_BASE_NAME}}-amd64-windows.exe"
  BINARY_DEBUG: "{{.BINARY_BASE_NAME}}"

  # Get versions from versions.yml
  GO_VERSION:
    sh: |
      if [ -d ".venv" ]; then
        # Activate virtual environment
        SHELL_NAME=$(basename "$SHELL")
        case "$SHELL_NAME" in
          "fish")
            [ -f ".venv/bin/activate.fish" ] && source .venv/bin/activate.fish 2>/dev/null || source .venv/bin/activate
            ;;
          "csh" | "tcsh")
            [ -f ".venv/bin/activate.csh" ] && source .venv/bin/activate.csh || source .venv/bin/activate
            ;;
          *)
            source .venv/bin/activate
            ;;
        esac
        python scripts/run.py version-helper get go 2>/dev/null || echo "1.24.4"
      else
        echo "1.24.4"
      fi
  GOLANGCI_LINT_VERSION:
    sh: |
      if [ -d ".venv" ]; then
        # Activate virtual environment
        SHELL_NAME=$(basename "$SHELL")
        case "$SHELL_NAME" in
          "fish")
            [ -f ".venv/bin/activate.fish" ] && source .venv/bin/activate.fish 2>/dev/null || source .venv/bin/activate
            ;;
          "csh" | "tcsh")
            [ -f ".venv/bin/activate.csh" ] && source .venv/bin/activate.csh || source .venv/bin/activate
            ;;
          *)
            source .venv/bin/activate
            ;;
        esac
        python scripts/run.py version-helper get tools.golangci-lint 2>/dev/null || echo "v2.2.1"
      else
        echo "v2.2.1"
      fi
  TASK_VERSION:
    sh: |
      if [ -d ".venv" ]; then
        # Activate virtual environment
        SHELL_NAME=$(basename "$SHELL")
        case "$SHELL_NAME" in
          "fish")
            [ -f ".venv/bin/activate.fish" ] && source .venv/bin/activate.fish 2>/dev/null || source .venv/bin/activate
            ;;
          "csh" | "tcsh")
            [ -f ".venv/bin/activate.csh" ] && source .venv/bin/activate.csh || source .venv/bin/activate
            ;;
          *)
            source .venv/bin/activate
            ;;
        esac
        python scripts/run.py version-helper get build.task 2>/dev/null || echo "3.x"
      else
        echo "3.x"
      fi
  VERSION:
    sh: git describe --tags --always --dirty 2>/dev/null || echo "v1.0.0"
  BUILD_TIME:
    sh: date -u +"%Y-%m-%dT%H:%M:%SZ"

  # Test directories - modify this to add/remove directories from testing
  TEST_DIRS: ./cmd/... ./pkg/... ./internal/...
  # Coverage output directory
  COVERAGE_DIR: reports

env:
  CGO_ENABLED: 1
  GOOS: "{{OS}}"
  GOARCH: "{{ARCH}}"

tasks:
  default:
    desc: Show available tasks organized by category
    cmds:
    - task shared:info:tasks
    silent: true

  setup:
    desc: Setup development environment (alias for shared:setup)
    cmds:
    - task shared:setup
    silent: true

  info:
    desc: Show environment information (alias for shared:info:environment)
    cmds:
    - task shared:info:environment
    silent: true

  test:
    desc: Run all tests (alias for test:all)
    cmds:
    - task test:all
    silent: true

  python:
    desc: Setup Python virtual environment (alias for shared:setup:python)
    cmds:
    - task shared:setup:python
    silent: true
