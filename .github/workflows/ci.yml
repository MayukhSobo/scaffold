name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.24.3

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Run tests
      run: task test:test

    - name: Run tests with race detection
      run: task test:test:race

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Run quality checks
      run: task quality:check

    - name: Check vulnerabilities
      run: task deps:vulnerabilities

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    strategy:
      matrix:
        goos: [linux, darwin, windows]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install UPX (for binary compression)
      run: |
        sudo apt-get update
        sudo apt-get install -y upx-ucl

    - name: Install dependencies
      run: task deps:install

    - name: Build for Linux
      if: matrix.goos == 'linux'
      run: task build:build:release:linux

    - name: Build for macOS
      if: matrix.goos == 'darwin'
      run: task build:build:release:darwin

    - name: Build for Windows
      if: matrix.goos == 'windows'
      run: task build:build:release:windows

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.goos }}
        path: build/${{ matrix.goos }}/
        retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './...'

    - name: Check for vulnerabilities
      run: task deps:vulnerabilities 
