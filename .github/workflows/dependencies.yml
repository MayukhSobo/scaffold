name: Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  GO_VERSION: 1.24.4

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Run vulnerability check
      run: task deps:vulnerabilities

    - name: Check for outdated dependencies
      run: task deps:outdated

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Update patch versions
      run: task deps:patch

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet go.mod go.sum; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request for patch updates
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update dependencies to latest patch versions'
        title: 'chore(deps): update dependencies to latest patch versions'
        body: |
          ## ðŸ“¦ Dependency Updates (Patch Versions)
          
          This PR updates dependencies to their latest patch versions.
          
          ### Changes
          - Updated Go module dependencies to latest patch versions
          - These are typically bug fixes and security patches
          
          ### Verification
          - [ ] All tests pass
          - [ ] No breaking changes expected (patch versions only)
          - [ ] Security vulnerabilities addressed
          
          **Auto-generated by GitHub Actions**
        branch: chore/update-dependencies-patch
        delete-branch: true
        labels: |
          dependencies
          automated-pr
          patch-update

  check-go-version:
    name: Check Go Version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check latest Go version
      id: go-version
      run: |
        LATEST_GO=$(curl -s https://go.dev/VERSION?m=text | head -1)
        CURRENT_GO="go${{ env.GO_VERSION }}"
        
        echo "latest=$LATEST_GO" >> $GITHUB_OUTPUT
        echo "current=$CURRENT_GO" >> $GITHUB_OUTPUT
        
        if [ "$LATEST_GO" != "$CURRENT_GO" ]; then
          echo "needs_update=true" >> $GITHUB_OUTPUT
          echo "ðŸ”„ Go version update available: $CURRENT_GO â†’ $LATEST_GO"
        else
          echo "needs_update=false" >> $GITHUB_OUTPUT
          echo "âœ… Go version is up to date: $CURRENT_GO"
        fi

    - name: Create issue for Go version update
      if: steps.go-version.outputs.needs_update == 'true'
      uses: peter-evans/create-issue-from-file@v5
      with:
        title: 'chore: Update Go version to ${{ steps.go-version.outputs.latest }}'
        content: |
          ## ðŸ”„ Go Version Update Available
          
          A new Go version is available:
          - **Current**: ${{ steps.go-version.outputs.current }}
          - **Latest**: ${{ steps.go-version.outputs.latest }}
          
          ### Tasks
          - [ ] Update `GO_VERSION` in `.github/workflows/*.yml`
          - [ ] Update `go.mod` if needed
          - [ ] Update `Taskfile.yml` GO_VERSION variable
          - [ ] Update README.md Go version badge
          - [ ] Test all workflows with new Go version
          
          ### Files to update:
          - `.github/workflows/ci.yml`
          - `.github/workflows/release.yml`
          - `.github/workflows/docker.yml`
          - `.github/workflows/dependencies.yml`
          - `Taskfile.yml`
          - `README.md`
          
          **Auto-generated by GitHub Actions**
        labels: |
          enhancement
          go-version
          automated-issue

  license-check:
    name: License Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: task deps:install

    - name: Check licenses
      run: task deps:licenses

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.csv
        retention-days: 30
      if: always() 